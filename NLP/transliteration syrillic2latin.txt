# 1
# using python 2.7

  # -*- coding: utf-8 -*-
  import sys
  reload(sys)
  sys.setdefaultencoding('utf-8')

  '''
  python version: 2.7.15
  '''

  import pandas as pd

  def transliterate_token_Cyrillic2Latin(word):
    answer = ""

    # 1.1
    # cyrillic2latin dict
    a = dict()
    a["А"]="A"; a["Б"]="B"; a["В"]="V"; a["Г"]="G"; a["Д"]="D"; a["Е"]="E"; a["Ё"]="YO"; a["Ж"]="ZH"; a["З"]="Z"; a["И"]="I"; a["Й"]="I"; a["К"]="K"; a["Л"]="L"; a["М"]="M"; a["Н"]="N"; a["О"]="O"; a["П"]="P"; a["Р"]="R"; a["С"]="S"; a["Т"]="T"; a["У"]="U"; a["Ф"]="F"; a["Х"]="H"; a["Ц"]="TS"; a["Ч"]="CH"; a["Ш"]="SH"; a["Щ"]="SCH"; a["Ъ"]="'"; a["Ы"]="I"; a["Ь"]="'"; a["Э"]="E"; a["Ю"]="YU"; a["Я"]="YA"; 
    a["а"]="a"; a["б"]="b"; a["в"]="v"; a["г"]="g"; a["д"]="d"; a["е"]="e"; a["ё"]="yo"; a["ж"]="zh"; a["з"]="z"; a["и"]="i"; a["й"]="i"; a["к"]="k"; a["л"]="l"; a["м"]="m"; a["н"]="n"; a["о"]="o"; a["п"]="p"; a["р"]="r"; a["с"]="s"; a["т"]="t"; a["у"]="u"; a["ф"]="f"; a["х"]="h"; a["ц"]="ts"; a["ч"]="ch"; a["ш"]="sh"; a["щ"]="sch"; a["ъ"]="'"; a["ы"]="i"; a["ь"]="'"; a["э"]="e"; a["ю"]="yu"; a["я"]="ya"; 

    # 1.2
    # dict keys to utf-8
    a = dict((k.decode('utf-8'), v) for (k, v) in a.items())

    # kazakh alphabet (шт сфыу ша туувув)
    # a["ә"]="á"; a["і"]="i"; a["ң"]="ń"; a["ғ"]="ǵ"; a["ү"]="ú"; a["ұ"]="u"; a["қ"]="q"; a["ө"]="ó"; a["һ"]="h";  
    # a["Ә"]="Á"; a["І"]="I"; a["Ң"]="Ń"; a["Ғ"]="Ǵ"; a["Ү"]="Ú"; a["Ұ"]="U"; a["Қ"]="Q"; a["Ө"]="Ó"; a["Һ"]="H";


    first_cyrillic_char = True
    is_previous_spec = False

    for i in range(1, len(word)):
      if (first_cyrillic_char == True):  # if it's just start
        # print "P 1"
        if (word[i-1] in a and word[i] in a):
          answer = answer + a[word[i-1]] + "_" + a[word[i]]

        elif(word[i-1] not in a and word[i] in a):			
          answer = answer + word[i-1] + a[word[i]]

        elif(word[i-1] in a and word[i] not in a):			
          answer = answer + a[word[i-1]] + word[i]

        else:			
          answer = answer + word[i-1] + word[i]

        first_cyrillic_char = False


      elif(word[i-1] in a and word[i] in a):
        # print "P 2"	
        answer = answer + "_" + a[word[i]]	

      elif (word[i-1] not in a and word[i] in a):
        # print "P 3"
        answer = answer + a[word[i]]

      elif (word[i] not in a):
        # print "P 4"
        answer = answer + word[i]

    return answer

  def transliterate_sent_Cyrillic2Latin(str_):
    tokens = str_.split(" ")

    transliterated = []
    for t in tokens:
      tt = transliterate_token_Cyrillic2Latin(t)
      transliterated.append(tt)

    return " ".join(transliterated)



  if __name__ == '__main__':
    # loads csv with cyrillic text in utf-8 encoding, if csv has different encoding indicate accordingly
    df = pd.read_csv("my.csv", usecols=["my_col"], nrows=1, encoding="utf-8")
    print "DF shape:", df.shape

    for idx, row in df.iterrows():
      row_p = row["normal_text_3"]
      token = row_p.split(" ")[0]

      print token
      print transliterate_token_Cyrillic2Latin(token)

      print row_p
      print transliterate_sent_Cyrillic2Latin(row_p)
      
      
