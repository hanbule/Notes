# 1
# get current path
	from os.path import abspath, dirname
	def current_script_dir():
		return dirname(abspath(__file__)) + '/'

# 2
# prints list of arg values (*values) and logs them to file (log_file, path to log file)
# for python 3
	import os
	def print_and_log(log_file, *values):
		with open(log_file, 'a') as outfile:
			outfile.write(' '.join([str(e) for e in values]) + '\n')
		print(*values)
		
# for python 2
	import os
	def print_and_log(log_file, *values):
		with open(log_file, 'a') as outfile:
			outfile.write(' '.join([str(e) for e in values]) + '\n')
		print(''.join([str(e) for e in values]))


# 3
# cmd command 'cd' interpreter
	from os.path import isfile, isdir, exists, join, abspath, dirname
	import re

	def cd_path(path_):
		# 1
		# split arg path
		path_ls = re.split('/|\\\\', path_)
		if(path_ls[-1] == ''):
			del path_ls[-1]

		# 2
		# split current path
		def current_script_dir(my_path):
			return dirname(abspath(my_path)) + '/'

		curr_path = current_script_dir(__file__)
		curr_path_ls = re.split('/|\\\\', curr_path)
		if(curr_path_ls[-1] == ''):
			del curr_path_ls[-1]

		# 3
		if(path_ls[0]==".."):
			# 3
			# interpret arg path
			for e in path_ls:
				if(e == '..'):
					del curr_path_ls[-1]
				else:
					curr_path_ls.append(e)

			return '/'.join(curr_path_ls) + "/"
		elif(path_ls[0]!=".."):
			return "/".join(curr_path_ls+path_ls) + "/"    # '/'.join(path_ls) + "/"
		elif(path_[:2]=="./"):
			return "/".join(curr_path_ls+path_ls) + "/"
		
		
	if __name__=='__main__':
		p = '../../dir_name'
		interpretted_cmd = cd_path(p)   # gets full path of 'dir_name' directory which is 2 dirs up
