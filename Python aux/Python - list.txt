==============================================================================================================================
List
------------------------------------------------------------------------------------------------------------------------------
# 1
Create a list of certain values:
	my_list = ['a'] * 3
	my_list
	['a','a','a']

# 2
Get last element:
	my_list[-1]
	
Get last element as list:
	my_list[-1:]

Get all elements but last:
	my_list[:-1]

# 3
Concat lists:
	ls3 = ls1+ls2

# 4
Copy list:
	ls_1 = ls_2[:]
	ls_1 = list(ls_2)  # more readable

	ls_1 = ls_2        # just creates reference to ls_2

# 5.1
Delete from list by index:
	del ls[element_idx]

Delete specific value from list:
	ls.remove(value)	                # removes only first occurence

Delete specific value from list:
	ls = [x for x in ls if x != my_value]   # removes all occurences

# 5.2
Delete list of strings from list of strings:
    	# option 1
	    remove_strings = [...]
	    ls = [x for x in ls if x not in remove_strings]
	
	# option 2.1 using regex (faster)
	    regex_ls = ["^%s$" % x for x in remove_strings]
	    regex_str = "|".join(rem_ls)
	 
	    ls = list(pandas.Series(ls).str.replace(regex_str, ""))
	    ls = [x for x in ls if x != ""]
	
	# option 2.2 using regex (in case some strings in remove_strings has non-alphanum chars)
	    repl = lambda m: "\\"+m.group(0)
	    regex_ls = list(pd.Series(remove_strings).str.replace(r"[^a-z0-9]", repl))  # add \\ before each non-alphanum char
	    regex_ls = ["^%s$" % x for x in remove_strings]
	    regex_str = "|".join(rem_ls)
	
	    ls = list(pandas.Series(ls).str.replace(regex_str, ""))
	    ls = [x for x in ls if x != ""]

# 6
Reverse list in place:
	ls.reverse()

