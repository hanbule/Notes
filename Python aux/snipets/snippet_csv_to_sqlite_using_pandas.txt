# 1
Note:
   Current snippet intended to run in python 2.7 due to first 5 lines of code. Delete first 5 lines of code
   to run in python 3.x



# -*- coding: utf-8 -*-
import sys
import locale
reload(sys)
sys.setdefaultencoding('utf-8')

import sqlite3
from sqlalchemy import create_engine, text
import pandas as pd
from os.path import isfile, isdir, exists, join, abspath, dirname
import re

def cd_path(path_):
	def current_script_dir(my_path):
		return dirname(abspath(my_path)) + '/'

	# 1
	# split current path
	curr_path = current_script_dir(__file__)
	curr_path_ls = re.split('/|\\\\', curr_path)

	if(curr_path_ls[-1] == ''):
		del curr_path_ls[-1]

	# 2
	# split arg path
	path_ls = re.split('/|\\\\', path_)

	# 3
	# interpret arg path
	for e in path_ls:
		if(e == '..'):
			del curr_path_ls[-1]
		else:
			curr_path_ls.append(e)

	return '/'.join(curr_path_ls)


if __name__=="__main__":
	# 1
  # load csv
	path_1 = cd_path('../2 - from json to csv/messages.csv')
	df = pd.read_csv(path_1, encoding='utf-8')
	print df.shape
	print df.columns

	# 2
	# set sqlite params
	sqlite_file = 'messages_db.sqlite'
	table_name = "messages"

	# ---------------------------------------------------------------------------------------------------------
	# 2.1
	# get sqlite cursor
	conn = sqlite3.connect(sqlite_file)
	c = conn.cursor()

	# creat table
	qry_create_table = """ CREATE TABLE IF NOT EXISTS %s (
								id BIGINT PRIMARY KEY,
								date_time text,
								member_name text,
								msg_text text,
								url text
								); """ % table_name

	c.execute(qry_create_table)

	# ---------------------------------------------------------------------------------------------------------
	# 2.2
	# get sqlite engine
	engine = create_engine('sqlite:///'+sqlite_file)

	# insert df into sqlite db
	df.to_sql(name=table_name, con=engine, chunksize=500, if_exists='append', index=True, index_label='id')  # index=True makes df index insert as column, index_label='id' makes df index labeled as 'id' during data insertion



